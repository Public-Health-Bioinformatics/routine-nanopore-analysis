#!/bin/bash
#$ -V             # Pass environment variables to the job
#$ -N albacore
#$ -cwd           # Use the current working dir		 
#$ -pe smp 8      # Parallel Environment (how many cores)
#$ -l h_vmem=2G   # Memory (RAM) allocation *per core*   

USAGE="qsub -t 1:<num_fast5_batch_dirs> $(basename "$0") [-h] [-c config] [-b|--barcoding] -i|--input INPUT_DIR -o|--output OUTPUT_DIR\n\
\n\
optional arguments:\n\
  -h, --help \t\t\t Show this help message and exit\n\
  -c CONFIG, --config CONFIG\t Albacore config file (Default: 'r94_450bps_linear.cfg')\n\
  -b, --barcoding \t\t Search for barcodes to demultiplex sequencing data.\n\
"

albacore_version="2.3.1"

if [[ ( $1 == "--help") ||  $1 == "-h" ]];
then 
  echo -e "Usage: ${USAGE}"
  exit 0
fi

INPUT=""
OUTPUT=""
CONFIG="r94_450bps_linear.cfg"
POSITIONAL=()
BARCODING=false

while [[ $# -gt 0 ]]
do
  key="$1"
  
  case $key in
    -o|--output)
    # Directory to write output
    OUTPUT="$2"
    shift # past argument
    shift # past value
    ;;
    -i|--input)
    # Base directory for run (must contain a 'fast5' subdir)
    INPUT="$2"
    shift # past argument
    shift # past value
    ;;
    -c|--config)
    CONFIG="$2"
    shift # past argument
    shift # past value
    ;;
    -b|--barcoding)
    # No value, just the argument
    BARCODING=true
    shift # past argument
    ;;
    *)    # unknown option
    POSITIONAL+=("$1") # save it in an array for later
    shift # past argument
    ;;
  esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters

echo INPUT      = "${INPUT}"
echo OUTPUT     = "${OUTPUT}"
echo CONFIG     = "${CONFIG}"
echo BARCODING  = "${BARCODING}"
echo POSITIONAL = "${@}"

source /opt/miniconda2/bin/activate albacore-"${albacore_version}"

# Run albacore
read_fast5_basecaller.py --disable_pings \
  --resume \
  -c "${CONFIG}" \
  -t 8 \
  -o fastq \
  -i "${INPUT}"/fast5/$(($SGE_TASK_ID - 1)) \
  -s "${OUTPUT}"/fastq/$(($SGE_TASK_ID - 1)) \
  $( if [ "$BARCODING" = true ]; then echo "--barcoding"; fi )\
  "${@}"
